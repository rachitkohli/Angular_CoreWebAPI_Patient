// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientAngularCore.Model;

namespace PatientAngularCore.Migrations
{
    [DbContext(typeof(PatientDBContext))]
    partial class PatientDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PatientAngularCore.Model.Disease", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiseaseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Diseases");
                });

            modelBuilder.Entity("PatientAngularCore.Model.PatientModel", b =>
                {
                    b.Property<int>("MRN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("deseaseIdID")
                        .HasColumnType("int");

                    b.HasKey("MRN");

                    b.HasIndex("deseaseIdID");

                    b.ToTable("PatientModels");
                });

            modelBuilder.Entity("PatientAngularCore.Model.PatientQuery", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Query")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("diseaseID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("diseaseID");

                    b.ToTable("PatientQueries");
                });

            modelBuilder.Entity("PatientAngularCore.Model.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PatientAngularCore.Model.PatientModel", b =>
                {
                    b.HasOne("PatientAngularCore.Model.Disease", "deseaseId")
                        .WithMany()
                        .HasForeignKey("deseaseIdID");
                });

            modelBuilder.Entity("PatientAngularCore.Model.PatientQuery", b =>
                {
                    b.HasOne("PatientAngularCore.Model.Disease", "disease")
                        .WithMany()
                        .HasForeignKey("diseaseID");
                });
#pragma warning restore 612, 618
        }
    }
}
